import { MigrationInterface, QueryRunner } from "typeorm";

export class SyncEntities1749106828859 implements MigrationInterface {
    name = 'SyncEntities1749106828859'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`DROP INDEX "public"."IDX_ce63c7859e8a8ad418203858d5"`);
        await queryRunner.query(`CREATE TABLE "tipps" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "post_id" uuid NOT NULL, "match_id" uuid, "match_name" character varying(255) NOT NULL, "match_date" date NOT NULL, "match_time" character varying(10), "outcome" character varying(255) NOT NULL, "odds" numeric(6,2) NOT NULL, "stake" integer NOT NULL, "confidence" integer, "tip_category" character varying(50) NOT NULL, "tip_result" character varying(20) NOT NULL DEFAULT 'PENDING', "submission_deadline" TIMESTAMP, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "author_id" uuid NOT NULL, "is_result_set" boolean NOT NULL DEFAULT false, "tip_resolved_at" TIMESTAMP, "tip_profit" numeric(8,2), "is_valid_tip" boolean NOT NULL DEFAULT true, "validation_errors" text, CONSTRAINT "PK_904f5504cd5e3963afc95e8b732" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_55843d4dd207f673cb6a30f790" ON "tipps" ("created_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_4f415ff4721a24d68a3ee9f112" ON "tipps" ("tip_result") `);
        await queryRunner.query(`CREATE INDEX "IDX_7048ab9cc1908b761a97537e5f" ON "tipps" ("match_date") `);
        await queryRunner.query(`CREATE INDEX "IDX_41da2119cc1cbf9fc9c8c853a6" ON "tipps" ("post_id") `);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "match_id"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "betting_market_id"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "odds"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "stake"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "confidence"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "expires_at"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "scheduled_for"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "voting_enabled"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "dislikes_count"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "shares_count"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "bookmarks_count"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "deleted_at"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "reports_count"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "is_verified"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "last_interaction_at"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "engagement_rate"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "tip_resolved_at"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "tip_profit"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "tip_category"`);
        await queryRunner.query(`DROP TYPE "public"."posts_tip_category_enum"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "match_date"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "total_odds"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "submission_deadline"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "is_result_set"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "is_valid_tip"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "edit_history"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "tip_result"`);
        await queryRunner.query(`DROP TYPE "public"."posts_tip_result_enum"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "tip_text"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "meta_keywords"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "match_name"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "validation_errors"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "match_time"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "outcome"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "shareable_link"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "slug"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "meta_description"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "image_urls"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "external_url"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "category"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "external_title"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "external_description"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "external_image_url"`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "created_by" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "category_id" uuid`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "image_url" character varying(500)`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "sharing_platforms" text`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "sharing_url" character varying(500)`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "is_deleted" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "share_count" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "title"`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "title" character varying(500)`);
        await queryRunner.query(`ALTER TYPE "public"."posts_type_enum" RENAME TO "posts_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."posts_type_enum" AS ENUM('general', 'discussion', 'analysis', 'help_request', 'news')`);
        await queryRunner.query(`ALTER TABLE "posts" ALTER COLUMN "type" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "posts" ALTER COLUMN "type" TYPE "public"."posts_type_enum" USING "type"::"text"::"public"."posts_type_enum"`);
        await queryRunner.query(`ALTER TABLE "posts" ALTER COLUMN "type" SET DEFAULT 'discussion'`);
        await queryRunner.query(`DROP TYPE "public"."posts_type_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."posts_status_enum" RENAME TO "posts_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."posts_status_enum" AS ENUM('draft', 'published', 'private', 'archived', 'deleted', 'reported', 'premium', 'inactive')`);
        await queryRunner.query(`ALTER TABLE "posts" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "posts" ALTER COLUMN "status" TYPE "public"."posts_status_enum" USING "status"::"text"::"public"."posts_status_enum"`);
        await queryRunner.query(`ALTER TABLE "posts" ALTER COLUMN "status" SET DEFAULT 'published'`);
        await queryRunner.query(`DROP TYPE "public"."posts_status_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."posts_visibility_enum" RENAME TO "posts_visibility_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."posts_visibility_enum" AS ENUM('public', 'followers_only', 'registered_only', 'private', 'author_only')`);
        await queryRunner.query(`ALTER TABLE "posts" ALTER COLUMN "visibility" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "posts" ALTER COLUMN "visibility" TYPE "public"."posts_visibility_enum" USING "visibility"::"text"::"public"."posts_visibility_enum"`);
        await queryRunner.query(`ALTER TABLE "posts" ALTER COLUMN "visibility" SET DEFAULT 'public'`);
        await queryRunner.query(`DROP TYPE "public"."posts_visibility_enum_old"`);
        await queryRunner.query(`CREATE INDEX "IDX_ceb1a781f04ed49dde2cf6f780" ON "posts" ("visibility") `);
        await queryRunner.query(`ALTER TABLE "tipps" ADD CONSTRAINT "FK_6ab601f943e7174c4af3496138b" FOREIGN KEY ("author_id") REFERENCES "users"("user_id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "tipps" DROP CONSTRAINT "FK_6ab601f943e7174c4af3496138b"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ceb1a781f04ed49dde2cf6f780"`);
        await queryRunner.query(`CREATE TYPE "public"."posts_visibility_enum_old" AS ENUM('public', 'followers', 'private')`);
        await queryRunner.query(`ALTER TABLE "posts" ALTER COLUMN "visibility" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "posts" ALTER COLUMN "visibility" TYPE "public"."posts_visibility_enum_old" USING "visibility"::"text"::"public"."posts_visibility_enum_old"`);
        await queryRunner.query(`ALTER TABLE "posts" ALTER COLUMN "visibility" SET DEFAULT 'public'`);
        await queryRunner.query(`DROP TYPE "public"."posts_visibility_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."posts_visibility_enum_old" RENAME TO "posts_visibility_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."posts_status_enum_old" AS ENUM('draft', 'published', 'private', 'archived', 'deleted', 'reported')`);
        await queryRunner.query(`ALTER TABLE "posts" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "posts" ALTER COLUMN "status" TYPE "public"."posts_status_enum_old" USING "status"::"text"::"public"."posts_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "posts" ALTER COLUMN "status" SET DEFAULT 'published'`);
        await queryRunner.query(`DROP TYPE "public"."posts_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."posts_status_enum_old" RENAME TO "posts_status_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."posts_type_enum_old" AS ENUM('tip', 'general', 'discussion', 'analysis')`);
        await queryRunner.query(`ALTER TABLE "posts" ALTER COLUMN "type" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "posts" ALTER COLUMN "type" TYPE "public"."posts_type_enum_old" USING "type"::"text"::"public"."posts_type_enum_old"`);
        await queryRunner.query(`ALTER TABLE "posts" ALTER COLUMN "type" SET DEFAULT 'discussion'`);
        await queryRunner.query(`DROP TYPE "public"."posts_type_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."posts_type_enum_old" RENAME TO "posts_type_enum"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "title"`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "title" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "share_count"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "is_deleted"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "sharing_url"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "sharing_platforms"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "image_url"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "category_id"`);
        await queryRunner.query(`ALTER TABLE "posts" DROP COLUMN "created_by"`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "external_image_url" text`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "external_description" text`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "external_title" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "category" character varying(100)`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "external_url" text`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "image_urls" text`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "meta_description" text`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "slug" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "shareable_link" text`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "outcome" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "match_time" character varying(10)`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "validation_errors" text`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "match_name" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "meta_keywords" text`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "tip_text" text`);
        await queryRunner.query(`CREATE TYPE "public"."posts_tip_result_enum" AS ENUM('pending', 'won', 'lost', 'void', 'half_won', 'half_lost')`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "tip_result" "public"."posts_tip_result_enum" DEFAULT 'pending'`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "edit_history" json`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "is_valid_tip" boolean NOT NULL DEFAULT true`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "is_result_set" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "submission_deadline" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "total_odds" numeric(8,2)`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "match_date" date`);
        await queryRunner.query(`CREATE TYPE "public"."posts_tip_category_enum" AS ENUM('single_bet', 'combo_bet', 'system_bet', 'live_bet')`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "tip_category" "public"."posts_tip_category_enum"`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "tip_profit" numeric(10,2)`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "tip_resolved_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "engagement_rate" numeric(5,2)`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "last_interaction_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "is_verified" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "reports_count" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "deleted_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "bookmarks_count" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "shares_count" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "dislikes_count" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "voting_enabled" boolean NOT NULL DEFAULT true`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "scheduled_for" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "expires_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "confidence" integer`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "stake" integer`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "odds" numeric(6,2)`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "betting_market_id" uuid`);
        await queryRunner.query(`ALTER TABLE "posts" ADD "match_id" uuid`);
        await queryRunner.query(`DROP INDEX "public"."IDX_41da2119cc1cbf9fc9c8c853a6"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7048ab9cc1908b761a97537e5f"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4f415ff4721a24d68a3ee9f112"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_55843d4dd207f673cb6a30f790"`);
        await queryRunner.query(`DROP TABLE "tipps"`);
        await queryRunner.query(`CREATE INDEX "IDX_ce63c7859e8a8ad418203858d5" ON "posts" ("match_id") `);
    }

}
