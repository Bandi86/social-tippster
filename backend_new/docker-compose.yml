version: '3.9'

services:
  # Postgres DBs for each service
  postgres_api_gateway:
    image: postgres:latest
    container_name: postgres_api_gateway
    restart: always
    environment:
      POSTGRES_USER: api_gateway_user
      POSTGRES_PASSWORD: api_gateway_pass
      POSTGRES_DB: api_gateway_db
    ports:
      - '5433:5432'
    volumes:
      - postgres_api_gateway_data:/var/lib/postgresql/data

  postgres_auth:
    image: postgres:latest
    container_name: postgres_auth
    restart: always
    environment:
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_pass
      POSTGRES_DB: auth_db
    ports:
      - '5434:5432'
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data

  postgres_user:
    image: postgres:latest
    container_name: postgres_user
    restart: always
    environment:
      POSTGRES_USER: user_user
      POSTGRES_PASSWORD: user_pass
      POSTGRES_DB: user_db
    ports:
      - '5435:5432'
    volumes:
      - postgres_user_data:/var/lib/postgresql/data

  postgres_post:
    image: postgres:latest
    container_name: postgres_post
    restart: always
    environment:
      POSTGRES_USER: post_user
      POSTGRES_PASSWORD: post_pass
      POSTGRES_DB: post_db
    ports:
      - '5436:5432'
    volumes:
      - postgres_post_data:/var/lib/postgresql/data

  postgres_stats:
    image: postgres:latest
    container_name: postgres_stats
    restart: always
    environment:
      POSTGRES_USER: stats_user
      POSTGRES_PASSWORD: stats_pass
      POSTGRES_DB: stats_db
    ports:
      - '5437:5432'
    volumes:
      - postgres_stats_data:/var/lib/postgresql/data

  postgres_tipp:
    image: postgres:latest
    container_name: postgres_tipp
    restart: always
    environment:
      POSTGRES_USER: tipp_user
      POSTGRES_PASSWORD: tipp_pass
      POSTGRES_DB: tipp_db
    ports:
      - '5438:5432'
    volumes:
      - postgres_tipp_data:/var/lib/postgresql/data

  postgres_notifications:
    image: postgres:latest
    container_name: postgres_notifications
    restart: always
    environment:
      POSTGRES_USER: notifications_user
      POSTGRES_PASSWORD: notifications_pass
      POSTGRES_DB: notifications_db
    ports:
      - '5439:5432'
    volumes:
      - postgres_notifications_data:/var/lib/postgresql/data

  postgres_chat:
    image: postgres:latest
    container_name: postgres_chat
    restart: always
    environment:
      POSTGRES_USER: chat_user
      POSTGRES_PASSWORD: chat_pass
      POSTGRES_DB: chat_db
    ports:
      - '5440:5432'
    volumes:
      - postgres_chat_data:/var/lib/postgresql/data

  postgres_data:
    image: postgres:latest
    container_name: postgres_data
    restart: always
    environment:
      POSTGRES_USER: data_user
      POSTGRES_PASSWORD: data_pass
      POSTGRES_DB: data_db
    ports:
      - '5441:5432'
    volumes:
      - postgres_data_data:/var/lib/postgresql/data

  postgres_image:
    image: postgres:latest
    container_name: postgres_image
    restart: always
    environment:
      POSTGRES_USER: image_user
      POSTGRES_PASSWORD: image_pass
      POSTGRES_DB: image_db
    ports:
      - '5442:5432'
    volumes:
      - postgres_image_data:/var/lib/postgresql/data

  postgres_live:
    image: postgres:latest
    container_name: postgres_live
    restart: always
    environment:
      POSTGRES_USER: live_user
      POSTGRES_PASSWORD: live_pass
      POSTGRES_DB: live_db
    ports:
      - '5443:5432'
    volumes:
      - postgres_live_data:/var/lib/postgresql/data

  postgres_log:
    image: postgres:latest
    container_name: postgres_log
    restart: always
    environment:
      POSTGRES_USER: log_user
      POSTGRES_PASSWORD: log_pass
      POSTGRES_DB: log_db
    ports:
      - '5444:5432'
    volumes:
      - postgres_log_data:/var/lib/postgresql/data

  postgres_admin:
    image: postgres:latest
    container_name: postgres_admin
    restart: always
    environment:
      POSTGRES_USER: admin_user
      POSTGRES_PASSWORD: admin_pass
      POSTGRES_DB: admin_db
    ports:
      - '5445:5432'
    volumes:
      - postgres_admin_data:/var/lib/postgresql/data

  # Redis and RabbitMQ
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - '6379:6379'
    command: redis-server --requirepass your_secure_password

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  # Microservices
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    environment:
      DATABASE_URL: postgres://api_gateway_user:api_gateway_pass@postgres_api_gateway:5432/api_gateway_db
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      - postgres_api_gateway
      - redis
      - rabbitmq
    ports:
      - '3000:3000'

  auth:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    container_name: auth
    environment:
      DATABASE_URL: postgres://auth_user:auth_pass@postgres_auth:5432/auth_db
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres_auth
      - redis
    ports:
      - '3001:3001'

  user:
    build:
      context: ./services/user
      dockerfile: Dockerfile
    container_name: user
    environment:
      DATABASE_URL: postgres://user_user:user_pass@postgres_user:5432/user_db
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres_user
      - redis
    ports:
      - '3003:3003'

  post:
    build:
      context: ./services/post
      dockerfile: Dockerfile
    container_name: post
    environment:
      DATABASE_URL: postgres://post_user:post_pass@postgres_post:5432/post_db
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres_post
      - redis
    ports:
      - '3004:3004'

  stats:
    build:
      context: ./services/stats
      dockerfile: Dockerfile
    container_name: stats
    environment:
      DATABASE_URL: postgres://stats_user:stats_pass@postgres_stats:5432/stats_db
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres_stats
      - redis
    ports:
      - '3005:3005'

  tipp:
    build:
      context: ./services/tipp
      dockerfile: Dockerfile
    container_name: tipp
    environment:
      DATABASE_URL: postgres://tipp_user:tipp_pass@postgres_tipp:5432/tipp_db
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres_tipp
      - redis
    ports:
      - '3006:3006'

  notifications:
    build:
      context: ./services/notifications
      dockerfile: Dockerfile
    container_name: notifications
    environment:
      DATABASE_URL: postgres://notifications_user:notifications_pass@postgres_notifications:5432/notifications_db
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      - postgres_notifications
      - redis
      - rabbitmq
    ports:
      - '3007:3007'

  chat:
    build:
      context: ./services/chat
      dockerfile: Dockerfile
    container_name: chat
    environment:
      DATABASE_URL: postgres://chat_user:chat_pass@postgres_chat:5432/chat_db
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      - postgres_chat
      - redis
      - rabbitmq
    ports:
      - '3008:3008'

  data:
    build:
      context: ./services/data
      dockerfile: Dockerfile
    container_name: data
    environment:
      DATABASE_URL: postgres://data_user:data_pass@postgres_data:5432/data_db
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres_data
      - redis
    ports:
      - '3009:3009'

  image:
    build:
      context: ./services/image
      dockerfile: Dockerfile
    container_name: image
    environment:
      DATABASE_URL: postgres://image_user:image_pass@postgres_image:5432/image_db
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres_image
      - redis
    ports:
      - '3010:3010'

  live:
    build:
      context: ./services/live
      dockerfile: Dockerfile
    container_name: live
    environment:
      DATABASE_URL: postgres://live_user:live_pass@postgres_live:5432/live_db
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres_live
      - redis
    ports:
      - '3011:3011'

  log:
    build:
      context: ./services/log
      dockerfile: Dockerfile
    container_name: log
    environment:
      DATABASE_URL: postgres://log_user:log_pass@postgres_log:5432/log_db
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres_log
      - redis
    ports:
      - '3012:3012'

  admin:
    build:
      context: ./services/admin
      dockerfile: Dockerfile
    container_name: admin
    environment:
      DATABASE_URL: postgres://admin_user:admin_pass@postgres_admin:5432/admin_db
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      - postgres_admin
      - redis
      - rabbitmq
    ports:
      - '3013:3013'

  # Frontend services
  frontend_new:
    build:
      context: ../../frontend_new
      dockerfile: Dockerfile
    container_name: frontend_new
    environment:
      NODE_ENV: production
    ports:
      - '3002:3002'
    depends_on:
      - api-gateway
      - auth
      - user
      - post
      - stats
      - tipp
      - notifications
      - chat
      - data
      - image
      - live
      - log
      - admin

  frontend_new_dev:
    build:
      context: ../../frontend_new
      dockerfile: Dockerfile
      target: dev
    container_name: frontend_new_dev
    environment:
      NODE_ENV: development
    ports:
      - '3002:3002'
    volumes:
      - ../../frontend_new:/app
    depends_on:
      - api-gateway
      - auth
      - user
      - post
      - stats
      - tipp
      - notifications
      - chat
      - data
      - image
      - live
      - log
      - admin
    command: ['npm', 'run', 'dev']

  api-gateway_dev:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
      target: dev
    container_name: api-gateway_dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://api_gateway_user:api_gateway_pass@postgres_api_gateway:5432/api_gateway_db
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    ports:
      - '3000:3000'
    volumes:
      - ./services/api-gateway:/app
    depends_on:
      - postgres_api_gateway
      - redis
      - rabbitmq
    command: ['npm', 'run', 'start:dev']

  auth_dev:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
      target: dev
    container_name: auth_dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://auth_user:auth_pass@postgres_auth:5432/auth_db
      REDIS_URL: redis://redis:6379
    ports:
      - '3001:3001'
    volumes:
      - ./services/auth:/app
    depends_on:
      - postgres_auth
      - redis
    command: ['npm', 'run', 'start:dev']

  user_dev:
    build:
      context: ./services/user
      dockerfile: Dockerfile
      target: dev
    container_name: user_dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://user_user:user_pass@postgres_user:5432/user_db
      REDIS_URL: redis://redis:6379
    ports:
      - '3003:3003'
    volumes:
      - ./services/user:/app
    depends_on:
      - postgres_user
      - redis
    command: ['npm', 'run', 'start:dev']

  post_dev:
    build:
      context: ./services/post
      dockerfile: Dockerfile
      target: dev
    container_name: post_dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://post_user:post_pass@postgres_post:5432/post_db
      REDIS_URL: redis://redis:6379
    ports:
      - '3004:3004'
    volumes:
      - ./services/post:/app
    depends_on:
      - postgres_post
      - redis
    command: ['npm', 'run', 'start:dev']

  stats_dev:
    build:
      context: ./services/stats
      dockerfile: Dockerfile
      target: dev
    container_name: stats_dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://stats_user:stats_pass@postgres_stats:5432/stats_db
      REDIS_URL: redis://redis:6379
    ports:
      - '3005:3005'
    volumes:
      - ./services/stats:/app
    depends_on:
      - postgres_stats
      - redis
    command: ['npm', 'run', 'start:dev']

  tipp_dev:
    build:
      context: ./services/tipp
      dockerfile: Dockerfile
      target: dev
    container_name: tipp_dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://tipp_user:tipp_pass@postgres_tipp:5432/tipp_db
      REDIS_URL: redis://redis:6379
    ports:
      - '3006:3006'
    volumes:
      - ./services/tipp:/app
    depends_on:
      - postgres_tipp
      - redis
    command: ['npm', 'run', 'start:dev']

  notifications_dev:
    build:
      context: ./services/notifications
      dockerfile: Dockerfile
      target: dev
    container_name: notifications_dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://notifications_user:notifications_pass@postgres_notifications:5432/notifications_db
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    ports:
      - '3007:3007'
    volumes:
      - ./services/notifications:/app
    depends_on:
      - postgres_notifications
      - redis
      - rabbitmq
    command: ['npm', 'run', 'start:dev']

  chat_dev:
    build:
      context: ./services/chat
      dockerfile: Dockerfile
      target: dev
    container_name: chat_dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://chat_user:chat_pass@postgres_chat:5432/chat_db
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    ports:
      - '3008:3008'
    volumes:
      - ./services/chat:/app
    depends_on:
      - postgres_chat
      - redis
      - rabbitmq
    command: ['npm', 'run', 'start:dev']

  data_dev:
    build:
      context: ./services/data
      dockerfile: Dockerfile
      target: dev
    container_name: data_dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://data_user:data_pass@postgres_data:5432/data_db
      REDIS_URL: redis://redis:6379
    ports:
      - '3009:3009'
    volumes:
      - ./services/data:/app
    depends_on:
      - postgres_data
      - redis
    command: ['npm', 'run', 'start:dev']

  image_dev:
    build:
      context: ./services/image
      dockerfile: Dockerfile
      target: dev
    container_name: image_dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://image_user:image_pass@postgres_image:5432/image_db
      REDIS_URL: redis://redis:6379
    ports:
      - '3010:3010'
    volumes:
      - ./services/image:/app
    depends_on:
      - postgres_image
      - redis
    command: ['npm', 'run', 'start:dev']

  live_dev:
    build:
      context: ./services/live
      dockerfile: Dockerfile
      target: dev
    container_name: live_dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://live_user:live_pass@postgres_live:5432/live_db
      REDIS_URL: redis://redis:6379
    ports:
      - '3011:3011'
    volumes:
      - ./services/live:/app
    depends_on:
      - postgres_live
      - redis
    command: ['npm', 'run', 'start:dev']

  log_dev:
    build:
      context: ./services/log
      dockerfile: Dockerfile
      target: dev
    container_name: log_dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://log_user:log_pass@postgres_log:5432/log_db
      REDIS_URL: redis://redis:6379
    ports:
      - '3012:3012'
    volumes:
      - ./services/log:/app
    depends_on:
      - postgres_log
      - redis
    command: ['npm', 'run', 'start:dev']

volumes:
  postgres_api_gateway_data:
  postgres_auth_data:
  postgres_user_data:
  postgres_post_data:
  postgres_stats_data:
  postgres_tipp_data:
  postgres_notifications_data:
  postgres_chat_data:
  postgres_data_data:
  postgres_image_data:
  postgres_live_data:
  postgres_log_data:
  postgres_admin_data:
